ele_begin : CompilationUnit
-- »ù´¡  --
Identifier : 'IDENTIFIER'
IdentifierList : 'SPOT' Identifier IdentifierList
IdentifierList : 0
Literal : 'IntegerLiteral'
Literal : 'FloatingPointLiteral'
Literal : 'BooleanLiteral'
Literal : 'CharacterLiteral'
Literal : 'null'
-- CompilationUnit --
CompilationUnit : PackageDeclaration
CompilationUnit : ImportDeclarationList
CompilationUnit : TypeDeclarationList
CompilationUnit : PackageDeclaration ImportDeclarationList
CompilationUnit : PackageDeclaration TypeDeclarationList
CompilationUnit : ImportDeclarationList TypeDeclarationList
CompilationUnit : PackageDeclaration ImportDeclarationList TypeDeclarationList
PackageDeclaration : AnnotationList 'package' DetailIdentifier 'semicolon'
PackageDeclaration : 'package' DetailIdentifier 'semicolon'
DetailIdentifier : Identifier 'SPOT' DetailIdentifier
DetailIdentifier : Identifier
--- ImportDeclarationList ----
ImportDeclarationList : ImportDeclaration ImportDeclarationList
ImportDeclarationList : ImportDeclaration
ImportDeclaration : 'import' DetailIdentifier 'semicolon'
ImportDeclaration : 'import' 'static' DetailIdentifier 'semicolon'
ImportDeclaration : 'import' DetailIdentifier 'SPOT' 'STAR' 'semicolon'
ImportDeclaration : 'import' 'static' DetailIdentifier 'SPOT' 'STAR' 'semicolon'
-- TypeDeclarationList --
TypeDeclarationList : TypeDeclaration TypeDeclarationList
TypeDeclarationList : TypeDeclaration
TypeDeclaration : ClassDeclaration
TypeDeclaration : InterfaceDeclaration
TypeDeclaration : 'semicolon'
-- ClassDeclaration
ClassDeclaration : NormalClassDeclaration
ClassDeclaration : EnumDeclaration
NormalClassDeclaration : 'class' Identifier Block
NormalClassDeclaration : ModifierList 'class' Identifier Block
NormalClassDeclaration : 'class' Identifier TypeArguments Block
NormalClassDeclaration : ModifierList 'class' Identifier TypeArguments Block
NormalClassDeclaration : 'class' Identifier 'extends' ClassType Block
NormalClassDeclaration : ModifierList 'class' Identifier 'extends' ClassType Block
NormalClassDeclaration : 'class' Identifier TypeArguments 'extends' ClassType Block
NormalClassDeclaration : ModifierList 'class' Identifier TypeArguments 'extends' ClassType Block
NormalClassDeclaration : 'class' Identifier 'implements' InterfaceTypeList Block
NormalClassDeclaration : ModifierList 'class' Identifier 'implements' InterfaceTypeList Block
NormalClassDeclaration : 'class' Identifier TypeArguments 'implements' InterfaceTypeList Block
NormalClassDeclaration : ModifierList 'class' Identifier TypeArguments 'implements' InterfaceTypeList Block
NormalClassDeclaration : 'class' Identifier 'extends' ClassType 'implements' InterfaceTypeList Block
NormalClassDeclaration : ModifierList 'class' Identifier 'extends' ClassType 'implements' InterfaceTypeList Block
NormalClassDeclaration : 'class' Identifier TypeArguments 'extends' ClassType 'implements' InterfaceTypeList Block
NormalClassDeclaration : ModifierList 'class' Identifier TypeArguments 'extends' ClassType 'implements' InterfaceTypeList Block
ModifierList 'class' Identifier TypeArguments 'extends' ClassType 'implements' InterfaceTypeList Block
ModifierList : Modifier ModifierList
ModifierList : Modifier
Modifier : Annotation
Modifier : 'public'
Modifier : 'protected'
Modifier : 'private'
Modifier : 'abstract'
Modifier : 'static'
Modifier : 'final'
Modifier : 'strictfp'
InterfaceTypeList : ClassType 'COMMA' InterfaceTypeList
InterfaceTypeList : ClassType
ClassType : ClassType 'SPOT' ClassTypeUnit
ClassType : ClassTypeUnit
ClassTypeUnit : Identifier
ClassTypeUnit : Identifier TypeArguments
ClassTypeUnit : AnnotationList Identifier
ClassTypeUnit : AnnotationList Identifier TypeArguments
-- EnumDeclaration ------
EnumDeclaration : 'enum' Identifier Block
EnumDeclaration : ModifierList 'enum' Identifier Block
EnumDeclaration : 'enum' Identifier  'implements' InterfaceTypeList Block
EnumDeclaration : ModifierList 'enum' Identifier  'implements' InterfaceTypeList Block
-- NormalInterfaceDeclaration ------
InterfaceDeclaration : NormalInterfaceDeclaration
InterfaceDeclaration : AnnotationTypeDeclaration
NormalInterfaceDeclaration : 'interface' Identifier Block
NormalInterfaceDeclaration : ModifierList 'interface' Identifier Block
NormalInterfaceDeclaration : 'interface' Identifier TypeArguments Block
NormalInterfaceDeclaration : ModifierList 'interface' Identifier TypeArguments Block
NormalInterfaceDeclaration : 'interface' Identifier 'extends' InterfaceTypeList Block
NormalInterfaceDeclaration : ModifierList 'interface' Identifier 'extends' InterfaceTypeList Block
NormalInterfaceDeclaration : 'interface' Identifier TypeArguments 'extends' InterfaceTypeList Block
NormalInterfaceDeclaration : ModifierList 'interface' Identifier TypeArguments 'extends' InterfaceTypeList Block
-- AnnotationTypeDeclaration ------
AnnotationTypeDeclaration : 'AT_INTERFACE' Identifier Block
AnnotationTypeDeclaration : ModifierList 'AT_INTERFACE' Identifier Block
-- Block ------
Block : 'LEFT_BRACE' BlockStatements 'RIGHT_BRACE'
BlockStatements : Block BlockStatements
BlockStatements : NonBrace BlockStatements
BlockStatements : 0
NonBrace : StatementEle
NonBrace : 'LEFT_ANGLE_BRACKET'
NonBrace : 'LEFT_BRACKET'
NonBrace : 'LEFT_PARENTHESES'
NonBrace : 'RIGHT_ANGLE_BRACKET'
NonBrace : 'RIGHT_BRACKET'
NonBrace : 'RIGHT_PARENTHESES'
StatementEle : 'IDENTIFIER'
StatementEle : 'AND'
StatementEle : 'AND_EQUAL'
StatementEle : 'AT'
StatementEle : 'AT_INTERFACE'
StatementEle : 'BIT_AND'
StatementEle : 'BIT_OR'
StatementEle : 'BooleanLiteral'
StatementEle : 'CARET'
StatementEle : 'COLON'
StatementEle : 'COMMA'
StatementEle : 'CharacterLiteral'
StatementEle : 'ClassTypeId'
StatementEle : 'DB_EQUAL'
StatementEle : 'DIVIDE_EQUAL'
StatementEle : 'EQUAL'
StatementEle : 'FloatingPointLiteral'
StatementEle : 'GT_EQUAL'
StatementEle : 'IntegerLiteral'
StatementEle : 'LAMBDA_TO'
StatementEle : 'LEFT_SHIFT'
StatementEle : 'LEFT_SHIFT_EQUAL'
StatementEle : 'LT_EQUAL'
StatementEle : 'MULTI_EQUAL'
StatementEle : 'NOT_EQUAL'
StatementEle : 'OR'
StatementEle : 'OR_EQUAL'
StatementEle : 'PLUS'
StatementEle : 'PLUS_EQUAL'
StatementEle : 'PRECENTAGE'
StatementEle : 'PRECENTAGE_EQUAL'
StatementEle : 'PackageOrTypeNameId'
StatementEle : 'QUESTION'
StatementEle : 'RIGHT_SHIFT'
StatementEle : 'RIGHT_SHIFT2'
StatementEle : 'RIGHT_SHIFT2_EQUAL'
StatementEle : 'RIGHT_SHIFT_EQUAL'
StatementEle : 'RIGTH_BRACKET'
StatementEle : 'SLASH'
StatementEle : 'SPOT'
StatementEle : 'STAR'
StatementEle : 'SUBTRACT'
StatementEle : 'SUBTRACT_EQUAL'
StatementEle : 'SURPRISE'
StatementEle : 'StringLiteral'
StatementEle : 'THREE_SPOT'
StatementEle : 'TILDE'
StatementEle : 'TWO_COLON'
StatementEle : 'TWO_PLUS'
StatementEle : 'TWO_SUBTRACT'
StatementEle : 'TypeNameId'
StatementEle : 'XOR_EQUAL'
StatementEle : 'abstract'
StatementEle : 'boolean'
StatementEle : 'byte'
StatementEle : 'char'
StatementEle : 'class'
StatementEle : 'default'
StatementEle : 'double'
StatementEle : 'enum'
StatementEle : 'extends'
StatementEle : 'final'
StatementEle : 'float'
StatementEle : 'implements'
StatementEle : 'instanceof'
StatementEle : 'int'
StatementEle : 'interface'
StatementEle : 'long'
StatementEle : 'native'
StatementEle : 'new'
StatementEle : 'null'
StatementEle : 'private'
StatementEle : 'protected'
StatementEle : 'public'
StatementEle : 'semicolon'
StatementEle : 'short'
StatementEle : 'static'
StatementEle : 'super'
StatementEle : 'synchronized'
StatementEle : 'this'
StatementEle : 'throws'
StatementEle : 'transient'
StatementEle : 'void'
StatementEle : 'volatile'
-- TypeArguments --
TypeArguments : 'LEFT_ANGLE_BRACKET' TypeArgumentListL2 'RIGHT_SHIFT2'
TypeArguments : 'LEFT_ANGLE_BRACKET' TypeArgumentListL1 'LEFT_ANGLE_BRACKET' 'RIGHT_SHIFT2'
TypeArguments : 'LEFT_ANGLE_BRACKET' TypeArgumentListL1 'RIGHT_SHIFT'
TypeArguments : 'LEFT_ANGLE_BRACKET' TypeArgumentList 'RIGHT_ANGLE_BRACKET'
TypeArgumentListL2 : TypeArguments TypeArgumentListL2
TypeArgumentListL2 : NonANGLE_BRACKET TypeArgumentListL2
TypeArgumentListL2 : 'LEFT_ANGLE_BRACKET' TypeArgumentListL1
TypeArgumentListL1 : TypeArguments TypeArgumentListL1
TypeArgumentListL1 : NonANGLE_BRACKET TypeArgumentListL1
TypeArgumentListL1 : 'LEFT_ANGLE_BRACKET' TypeArgumentList
TypeArgumentList : TypeArguments TypeArgumentList
TypeArgumentList : NonANGLE_BRACKET TypeArgumentList
TypeArgumentList : 0
NonANGLE_BRACKET : 'QUESTION'
NonANGLE_BRACKET : 'extends'
NonANGLE_BRACKET : 'super'
NonANGLE_BRACKET : 'COMMA'
NonANGLE_BRACKET : Identifier
NonANGLE_BRACKET : 'ClassTypeId'
-- Annotation ------
AnnotationList : Annotation AnnotationList
AnnotationList : Annotation
Annotation : NormalAnnotation
Annotation : MarkerAnnotation
Annotation : SingleElementAnnotation
MarkerAnnotation : 'AT' DetailIdentifier
NormalAnnotation : 'AT' DetailIdentifier AnnotationContent
AnnotationContent : 'LEFT_PARENTHESES' AnnotationContentStatements 'RIGHT_PARENTHESES'
AnnotationContentStatements : AnnotationContent AnnotationContentStatements
AnnotationContentStatements : NonPARENTHESES AnnotationContentStatements
AnnotationContentStatements : NonPARENTHESES
NonPARENTHESES : StatementEle
NonPARENTHESES : 'LEFT_BRACE'
NonPARENTHESES : 'LEFT_BRACKET'
NonPARENTHESES : 'LEFT_ANGLE_BRACKET'
NonPARENTHESES : 'RIGHT_BRACE'
NonPARENTHESES : 'RIGHT_BRACKET'
NonPARENTHESES : 'RIGHT_ANGLE_BRACKET'