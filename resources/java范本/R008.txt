ele_begin : InterfaceMemberDeclaration
InterfaceMemberDeclaration : InterfaceMethodDeclaration
InterfaceMemberDeclaration : ConstantDeclaration
InterfaceMemberDeclaration : ConstantDeclarationFake
InterfaceMemberDeclaration : ClassDeclaration
InterfaceMemberDeclaration : InterfaceDeclaration
InterfaceDeclaration : NormalInterfaceDeclaration
InterfaceDeclaration : AnnotationTypeDeclaration
ClassDeclaration : NormalClassDeclaration
ClassDeclaration : EnumDeclaration
EnumDeclaration : 'enum' Identifier Block
EnumDeclaration : ModifierList 'enum' Identifier Block
EnumDeclaration : 'enum' Identifier Superinterfaces Block
EnumDeclaration : ModifierList 'enum' Identifier Superinterfaces Block
NormalClassDeclaration : ModifierList 'class' Identifier TypeArguments Superclass Superinterfaces Block
NormalClassDeclaration : 'class' Identifier TypeArguments Superclass Superinterfaces Block
NormalClassDeclaration : ModifierList 'class' Identifier Superclass Superinterfaces Block
NormalClassDeclaration : 'class' Identifier Superclass Superinterfaces Block
NormalClassDeclaration : ModifierList 'class' Identifier TypeArguments Superinterfaces Block
NormalClassDeclaration : 'class' Identifier TypeArguments Superinterfaces Block
NormalClassDeclaration : ModifierList 'class' Identifier Superinterfaces Block
NormalClassDeclaration : 'class' Identifier Superinterfaces Block
NormalClassDeclaration : ModifierList 'class' Identifier TypeArguments Superclass Block
NormalClassDeclaration : 'class' Identifier TypeArguments Superclass Block
NormalClassDeclaration : ModifierList 'class' Identifier Superclass Block
NormalClassDeclaration : 'class' Identifier Superclass Block
NormalClassDeclaration : ModifierList 'class' Identifier TypeArguments Block
NormalClassDeclaration : 'class' Identifier TypeArguments Block
NormalClassDeclaration : ModifierList 'class' Identifier Block
NormalClassDeclaration : 'class' Identifier Block
Superclass : 'extends' ClassType
Superinterfaces : 'implements' InterfaceTypeList
NormalInterfaceDeclaration : 'interface' Identifier Block
NormalInterfaceDeclaration : ModifierList 'interface' Identifier Block
NormalInterfaceDeclaration : 'interface' Identifier TypeArguments Block
NormalInterfaceDeclaration : ModifierList 'interface' Identifier TypeArguments Block
NormalInterfaceDeclaration : 'interface' Identifier ExtendsInterfaces Block
NormalInterfaceDeclaration : ModifierList 'interface' Identifier ExtendsInterfaces Block
NormalInterfaceDeclaration : 'interface' Identifier TypeArguments ExtendsInterfaces Block
NormalInterfaceDeclaration : ModifierList 'interface' Identifier TypeArguments ExtendsInterfaces Block
AnnotationTypeDeclaration : 'AT' 'interface' Identifier Block
AnnotationTypeDeclaration : ModifierList 'AT' 'interface' Identifier Block
AnnotationTypeDeclaration : 'AT_INTERFACE' Identifier Block
AnnotationTypeDeclaration : ModifierList 'AT_INTERFACE' Identifier Block
Identifier : 'IDENTIFIER'
Block : 'LEFT_BRACE' BlockStatements 'RIGHT_BRACE'
Block : 'LEFT_BRACE' BlockStatements 'COMMA_RIGHT_BRACE'
BlockStatements : Block BlockStatements
BlockStatements : NonBrace BlockStatements
BlockStatements : 0
NonBrace : StatementEle
NonBrace : 'COMMA'
NonBrace : 'semicolon'
NonBrace : 'LEFT_ANGLE_BRACKET'
NonBrace : 'LEFT_BRACKET'
NonBrace : 'LEFT_PARENTHESES'
NonBrace : 'RIGHT_ANGLE_BRACKET'
NonBrace : 'RIGHT_BRACKET'
NonBrace : 'RIGHT_PARENTHESES'
NonBrace : 'EQUAL'
StatementEle : Identifier
StatementEle : 'AND'
StatementEle : 'AND_EQUAL'
StatementEle : 'AT'
StatementEle : 'AT_INTERFACE'
StatementEle : 'BIT_AND'
StatementEle : 'BIT_OR'
StatementEle : 'BooleanLiteral'
StatementEle : 'CARET'
StatementEle : 'COLON'
StatementEle : 'CharacterLiteral'
StatementEle : 'DB_EQUAL'
StatementEle : 'DIVIDE_EQUAL'
StatementEle : 'FloatingPointLiteral'
StatementEle : 'GT_EQUAL'
StatementEle : 'IntegerLiteral'
StatementEle : 'LAMBDA_TO'
StatementEle : 'LEFT_SHIFT'
StatementEle : 'LEFT_SHIFT_EQUAL'
StatementEle : 'LT_EQUAL'
StatementEle : 'MULTI_EQUAL'
StatementEle : 'NOT_EQUAL'
StatementEle : 'OR'
StatementEle : 'OR_EQUAL'
StatementEle : 'PLUS'
StatementEle : 'PLUS_EQUAL'
StatementEle : 'PRECENTAGE'
StatementEle : 'PRECENTAGE_EQUAL'
StatementEle : 'PackageOrTypeNameId'
StatementEle : 'QUESTION'
StatementEle : 'RIGHT_SHIFT'
StatementEle : 'RIGHT_SHIFT2'
StatementEle : 'RIGHT_SHIFT2_EQUAL'
StatementEle : 'RIGHT_SHIFT_EQUAL'
StatementEle : 'RIGTH_BRACKET'
StatementEle : 'SLASH'
StatementEle : 'SPOT'
StatementEle : 'STAR'
StatementEle : 'SUBTRACT'
StatementEle : 'SUBTRACT_EQUAL'
StatementEle : 'SURPRISE'
StatementEle : 'StringLiteral'
StatementEle : 'THREE_SPOT'
StatementEle : 'TILDE'
StatementEle : 'TWO_COLON'
StatementEle : 'TWO_PLUS'
StatementEle : 'TWO_SUBTRACT'
StatementEle : 'TypeNameId'
StatementEle : 'XOR_EQUAL'
StatementEle : 'abstract'
StatementEle : 'boolean'
StatementEle : 'byte'
StatementEle : 'char'
StatementEle : 'class'
StatementEle : 'default'
StatementEle : 'double'
StatementEle : 'enum'
StatementEle : 'extends'
StatementEle : 'final'
StatementEle : 'float'
StatementEle : 'implements'
StatementEle : 'instanceof'
StatementEle : 'int'
StatementEle : 'interface'
StatementEle : 'long'
StatementEle : 'native'
StatementEle : 'new'
StatementEle : 'null'
StatementEle : 'private'
StatementEle : 'protected'
StatementEle : 'public'
StatementEle : 'short'
StatementEle : 'static'
StatementEle : 'super'
StatementEle : 'synchronized'
StatementEle : 'this'
StatementEle : 'throws'
StatementEle : 'transient'
StatementEle : 'void'
StatementEle : 'volatile'
ModifierList : Modifier ModifierList
ModifierList : Modifier
Modifier : 'public'
Modifier : 'protected'
Modifier : 'private'
Modifier : 'abstract'
Modifier : 'static'
Modifier : 'final'
Modifier : 'strictfp'
Modifier : 'default'
Modifier : 'volatile'
Modifier : 'synchronized'
Modifier : 'transient'
Modifier : 'native'
Modifier : Annotation
Annotation : 'AT' DetailIdentifier AnnotationContent
Annotation : 'AT' DetailIdentifier
DetailIdentifier : Identifier 'SPOT' DetailIdentifier
DetailIdentifier : Identifier
AnnotationContent : 'LEFT_PARENTHESES' AnnotationContentStatements 'RIGHT_PARENTHESES'
AnnotationContentStatements : NonPARENTHESES AnnotationContentStatements
AnnotationContentStatements : 0
NonPARENTHESES : StatementEle
NonPARENTHESES : 'COMMA'
NonPARENTHESES : 'semicolon'
NonPARENTHESES : 'LEFT_BRACE'
NonPARENTHESES : 'LEFT_BRACKET'
NonPARENTHESES : 'LEFT_ANGLE_BRACKET'
NonPARENTHESES : 'RIGHT_BRACE'
NonPARENTHESES : 'COMMA_RIGHT_BRACE'
NonPARENTHESES : 'RIGHT_BRACKET'
NonPARENTHESES : 'RIGHT_ANGLE_BRACKET'
NonPARENTHESES : 'EQUAL'
NonPARENTHESES : AnnotationContent
TypeArguments : 'LEFT_ANGLE_BRACKET' TypeArgumentListL2 'RIGHT_SHIFT2'
TypeArguments : 'LEFT_ANGLE_BRACKET' TypeArgumentListL1 'LEFT_ANGLE_BRACKET' 'RIGHT_SHIFT2'
TypeArguments : 'LEFT_ANGLE_BRACKET' TypeArgumentListL1 'RIGHT_SHIFT'
TypeArguments : 'LEFT_ANGLE_BRACKET' TypeArgumentList 'RIGHT_ANGLE_BRACKET'
TypeArgumentListL2 : TypeArguments TypeArgumentListL2
TypeArgumentListL2 : NonANGLE_BRACKET TypeArgumentListL2
TypeArgumentListL2 : 'LEFT_ANGLE_BRACKET' TypeArgumentListL1
TypeArgumentListL1 : TypeArguments TypeArgumentListL1
TypeArgumentListL1 : NonANGLE_BRACKET TypeArgumentListL1
TypeArgumentListL1 : 'LEFT_ANGLE_BRACKET' TypeArgumentList
TypeArgumentList : NonANGLE_BRACKET TypeArgumentList
TypeArgumentList : 0
NonANGLE_BRACKET : 'QUESTION'
NonANGLE_BRACKET : 'extends'
NonANGLE_BRACKET : 'super'
NonANGLE_BRACKET : 'COMMA'
NonANGLE_BRACKET : Identifier
NonANGLE_BRACKET : UnannPrimitiveType
NonANGLE_BRACKET : 'SPOT'
NonANGLE_BRACKET : 'LEFT_BRACKET'
NonANGLE_BRACKET : 'RIGHT_BRACKET'
NonANGLE_BRACKET : TypeArguments
ExtendsInterfaces : 'extends' InterfaceTypeList
InterfaceTypeList : ClassType 'COMMA' InterfaceTypeList
InterfaceTypeList : ClassType
ClassTypeEle : Identifier
ClassTypeEle : AnnotationList Identifier
ClassTypeEle : Identifier TypeArguments
ClassTypeEle : AnnotationList Identifier TypeArguments
ClassType : ClassTypeEle
ClassType : ClassTypeEle 'SPOT' ClassType
InterfaceMethodDeclaration : MethodHeader Block
InterfaceMethodDeclaration : ModifierList MethodHeader Block
InterfaceMethodDeclaration : MethodHeader 'semicolon'
InterfaceMethodDeclaration : ModifierList MethodHeader 'semicolon'
MethodHeader : Result MethodDeclarator Throws
MethodHeader : Result MethodDeclarator
Result : UnannType
Result : 'void'
UnannType : UnannArrayType
UnannType : UnannPrimitiveType
UnannType : UnannClassOrInterfaceType
UnannPrimitiveType : 'boolean'
UnannPrimitiveType : 'byte'
UnannPrimitiveType : 'short'
UnannPrimitiveType : 'int'
UnannPrimitiveType : 'long'
UnannPrimitiveType : 'char'
UnannPrimitiveType : 'float'
UnannPrimitiveType : 'double'
UnannClassOrInterfaceType : Identifier TypeArguments 'SPOT' AnnotationList UnannClassOrInterfaceType
UnannClassOrInterfaceType : Identifier 'SPOT' AnnotationList UnannClassOrInterfaceType
UnannClassOrInterfaceType : Identifier TypeArguments 'SPOT' UnannClassOrInterfaceType
UnannClassOrInterfaceType : Identifier 'SPOT' UnannClassOrInterfaceType
UnannClassOrInterfaceType : Identifier TypeArguments
UnannClassOrInterfaceType : Identifier
UnannArrayType : UnannPrimitiveType Dims
UnannArrayType : UnannClassOrInterfaceType Dims
MethodDeclarator : Identifier AnnotationContent
MethodDeclarator : Identifier AnnotationContent Dims
Dims : 'LEFT_BRACKET' 'RIGHT_BRACKET' Dims
Dims : AnnotationList 'LEFT_BRACKET' 'RIGHT_BRACKET' Dims
Dims : 'LEFT_BRACKET' 'RIGHT_BRACKET'
Dims : AnnotationList 'LEFT_BRACKET' 'RIGHT_BRACKET'
Throws : 'throws' ExceptionTypeList
ExceptionTypeList : ExceptionType 'COMMA' ExceptionTypeList
ExceptionTypeList : ExceptionType
ExceptionType : UnannClassOrInterfaceType
ExceptionType : AnnotationList UnannClassOrInterfaceType
ConstantDeclaration : UnannType VariableDeclaratorList 'semicolon'
ConstantDeclaration : ModifierList UnannType VariableDeclaratorList 'semicolon'
ConstantDeclarationFake : UnannType VariableDeclaratorList
ConstantDeclarationFake : ModifierList UnannType VariableDeclaratorList
VariableDeclaratorList : VariableDeclarator 'COMMA' VariableDeclaratorList
VariableDeclaratorList : VariableDeclarator
VariableDeclarator : VariableDeclaratorId 'EQUAL' VariableInitializer
VariableDeclarator : VariableDeclaratorId
VariableInitializer : VariableInitializerEle VariableInitializer
VariableInitializer : VariableInitializerEle
VariableInitializerEle : StatementEle
VariableInitializerEle : Block
VariableInitializerEle : AnnotationContent
VariableInitializerEle : TypeArguments
VariableInitializerEle : DimExpr
VariableInitializerEle : 'LEFT_BRACKET' 'RIGHT_BRACKET'
VariableDeclaratorId : Identifier Dims
VariableDeclaratorId : Identifier
AnnotationList : Annotation AnnotationList
AnnotationList : Annotation
DimExpr : AnnotationList 'LEFT_BRACKET' VariableInitializerEle 'RIGHT_BRACKET'
DimExpr : 'LEFT_BRACKET' VariableInitializerEle 'RIGHT_BRACKET'